{"version":3,"sources":["validateInfo.js","FormSignup.js","useForm.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["validateInfo","values","errors","username","trim","email","test","password","length","password2","FormSignup","submitForm","validate","callback","useState","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","e","target","name","value","handleSubmit","preventDefault","useForm","className","onSubmit","noValidate","htmlFor","id","type","placeholder","onChange","href","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa8ee600.chunk.js","sourcesContent":["export const validateInfo = values => {\n  const errors = {}\n\n  if (!values.username.trim()) {\n    errors.username = 'Username required'\n  }\n\n  //Email\n  if(!values.email) {\n    errors.email = 'Email required'\n  } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Email address is invalid'\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required'\n  } else if(values.password.length < 6) {\n    errors.password = 'Password needs to be more 6 characters or more'\n  }\n\n  if (!values.password2) {\n    errors.password = 'Password is required'\n  } else if(values.password2 !== values.password) {\n    errors.password2 = 'Password do not match'\n  }\n\n  return errors;\n}\n","import React from 'react';\nimport { useForm } from './useForm.js';\nimport { validateInfo } from './validateInfo.js';\nimport './Form.css';\n\nexport const FormSignup = ({submitForm}) => {\n  const { handleChange, handleSubmit, values, errors } = useForm(validateInfo, submitForm);\n\n  return (\n    <div className=\"form-content-right\">\n      <form\n        className={'form'}\n        onSubmit={handleSubmit}\n        noValidate\n      >\n        <h1 className=\"form__title\">\n          Get started with us today!\n          Create your account by filling out create information below.\n        </h1>\n        <div className=\"form__inputs\">\n          <label htmlFor=\"username\" className=\"form__label\">\n            Username\n          </label>\n          <input\n            id={'username'}\n            type=\"text\"\n            name='username'\n            className=\"input\"\n            placeholder={'Enter your name'}\n            value={values.username}\n            onChange={handleChange}\n          />\n          {errors.username && <span className={'input__error'}>{errors.username}</span>}\n        </div>\n\n        <div className=\"form__inputs\">\n          <label htmlFor=\"email\" className=\"form__label\">\n            Email\n          </label>\n          <input\n            id={'email'}\n            type=\"email\"\n            name='email'\n            className=\"input\"\n            placeholder={'Enter your email'}\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <span className={'input__error'}>{errors.email}</span>}\n        </div>\n\n        <div className=\"form__inputs\">\n          <label htmlFor=\"password\" className=\"form__label\">\n            Password\n          </label>\n          <input\n            id={'password'}\n            type=\"password\"\n            name='password'\n            className=\"input\"\n            placeholder={'Enter your password'}\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <span className={'input__error'}>{errors.password}</span>}\n        </div>\n\n        <div className=\"form__inputs\">\n          <label htmlFor=\"password2\" className=\"form__label\">\n            Confirm Password\n          </label>\n          <input\n            id={'password2'}\n            type=\"password\"\n            name='password2'\n            className=\"input\"\n            placeholder={'Confirm password'}\n            value={values.password2}\n            onChange={handleChange}\n          />\n          {errors.password2 && <span className={'input__error'}>{errors.password2}</span>}\n        </div>\n\n        <button\n          className=\"form__btn\"\n          type={'submit'}\n        >\n        Sign up\n        </button>\n        <span className='form__login'>\n          Already have an account? Login&nbsp;\n          <a href={'#'}>here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useForm = (validate, callback) => {\n\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const [ errors, setErrors ] = useState({});\n  const [ isSubmitting, setIsSubmitting ] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  }\n\n  useEffect(\n    () => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n        callback();\n      }\n    },\n    [errors]\n  );\n\n  return {\n    values,\n    handleChange,\n    handleSubmit,\n    errors,\n  };\n};\n\n","import React from 'react';\nimport './Form.css';\n\nexport const FormSuccess = () => {\n  return (\n      <div className='form-content-right'>\n        <h1 className='form__title-success'>We have received your request!</h1>\n        <img className='form__img-2' src='img/img-3.svg' alt='success-image'/>\n      </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormSignup } from \"./FormSignup\";\nimport { FormSuccess } from \"./FormSuccess\";\n\nexport const Form = () => {\n  const [ isSubmitted, setIsSubmitted ] = useState(false);\n\n  const submitForm = () => {\n    setIsSubmitted(true);\n  }\n\n  return (\n    <>\n      <div className=\"form-container\">\n        <span className='close-btn'>Ã—</span>\n        <div className='form-content-left'>\n          <img className='form-img' src='img/img-2.svg' alt='spaceship' />\n        </div>\n\n        {!isSubmitted\n          ? <FormSignup submitForm={submitForm}/>\n          : <FormSuccess/>\n        }\n      </div>\n    </>\n\n  );\n};\n","import React from \"react\";\nimport './App.css';\nimport {Form} from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}